#!/usr/bin/python3

import os
import locale
import datetime
import pathlib
import sys
import subprocess
import tempfile

import acbuild

# C.UTF-8 is a language-independent unicode locale
# https://sourceware.org/glibc/wiki/Proposals/C.UTF-8
# however, it has not yet been upstreamed to glibc, so
# arch does not support it
# https://sourceware.org/bugzilla/show_bug.cgi?id=17318
# also, python does not officially support C.UTF-8 (PEP 538)
# therefore we use C (some aspects of pacstrapping don't
# play nice with locales like en_US.UTF-8, because those have
# to be generated first)
LOCALE = 'C'
# we must set the envar so that child processes inherit it
os.environ['LC_ALL'] = LOCALE
# we must also invoke setlocale to reread that envar for our
# own process
locale.setlocale(locale.LC_ALL, '')

today = datetime.datetime.utcnow().date().strftime('%Y%m%d')
rootfs = pathlib.Path(f'archlinux-{today}')
rootfs.mkdir()
rootfs.chmod(0o755)
rootfs = rootfs.resolve()

packages = {
    'bash',
    'bzip2',
    'coreutils',
    'diffutils',
    'file',
    'filesystem',
    'findutils',
    'gawk',
    'grep',
    'gzip',
    'iputils',
    'less',
    'pacman',
    'procps-ng',
    'psmisc',
    'sed',
    'shadow',
    'tar',
    'util-linux',
    'which',
}

# set standard conf options
# use an https mirror, instead of the mirrorlist
pacman_conf = b'''\
[options]
Architecture = auto

SigLevel = Required DatabaseOptional
LocalFileSigLevel = Optional

[core]
Server = https://mirrors.kernel.org/archlinux/$repo/os/$arch
[extra]
Server = https://mirrors.kernel.org/archlinux/$repo/os/$arch
[community]
Server = https://mirrors.kernel.org/archlinux/$repo/os/$arch
[multilib]
Server = https://mirrors.kernel.org/archlinux/$repo/os/$arch
'''

with tempfile.NamedTemporaryFile() as tmpconf:
    tmpconf.write(pacman_conf)
    tmpconf.flush()
    # TODO: instead of doing this, can we acbuild begin on an empty filesystem and
    # pacman -r .acbuild/currentaci/rootfs <packages>? it avoids duplicating work
    # between pacstrap and acbuild (they both have to mount ephemeral filesystems)
    subprocess.run(
        ['pacstrap', '-C', tmpconf.name, '-c', '-d', '-G', '-M', rootfs, *packages],
        check=True
    )

    with acbuild.ACBuild(f'archlinux-{today}.aci', initial_aci=rootfs, debug=True) as aci:
        aci.set_name('archlinux')
        aci.label_add('version', today)
        # the container also needs access to pacman.conf
        aci.copy(tmpconf.name, '/etc/pacman.conf')
        # although we pacstrapped in C, the container should have a UTF-8 locale at runtime
        # due to the lack of C.UTF-8 on arch, en_US.UTF-8 is the next-best option
        with tempfile.NamedTemporaryFile() as localegen:
            localegen.write(b'en_US.UTF-8 UTF-8\n')
            localegen.flush()
            aci.copy(localegen.name, '/etc/locale.gen')
        # note that this requires sed
        aci.run('locale-gen')
        # UTC timezone
        aci.run('ln', '-sf', '/usr/share/zoneinfo/UTC', '/etc/localtime')
        # TODO: does this need help with generating entropy?
        # https://wiki.archlinux.org/index.php/Pacman/Package_signing
        aci.run('pacman-key', '--init')
        # pacstrap was run on the host, so this log contains paths from the host filesystem
        # hence we want to remove it
        aci.run('rm', '/var/log/pacman.log')
        # lock root
        aci.run('passwd', '-l', 'root')

# alternative approaches:
#   https://github.com/finalduty/docker-archlinux (run pacstrap like we're doing)
#   https://github.com/greyltc/docker-archlinux (bootstrap pacman outside an arch system)
#   https://github.com/archimg/archlinux (use the rootfs provided by arch)
