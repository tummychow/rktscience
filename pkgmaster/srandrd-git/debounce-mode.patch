diff --git a/srandrd.c b/srandrd.c
index 4722d75..6758e61 100644
--- a/srandrd.c
+++ b/srandrd.c
@@ -346,6 +346,7 @@ process_events(Display * dpy, int verbose, int emit_startup)
 {
 	XRRScreenResources *sr;
 	XRROutputInfo *info;
+	XRRModeInfo *mode;
 	XEvent ev;
 	char edid[EDID_SIZE], screenid[SCREENID_SIZE];
 	int i, edidlen;
@@ -377,7 +378,20 @@ process_events(Display * dpy, int verbose, int emit_startup)
 				continue;
 			}
 
+			for (i = 0; i < sr->nmode; i++) {
+				if (sr->modes[i].id == OCNE(&ev)->mode) {
+					mode = &sr->modes[i];
+					break;
+				}
+			}
+
 			if (strncmp(CON_EVENTS[info->connection], "disconnected", 12) == 0) {
+				if (mode == NULL && !(OCNE(&ev)->mode)) {
+					fprintf(stderr, "Ignoring disconnected event with no mode\n");
+					XRRFreeScreenResources(sr);
+					XRRFreeOutputInfo(info);
+					continue;
+				}
 				/* retrieve edid and screen information from cache */
 				OutputConnection *ocon = get_output_connection(CONNECTIONS, OCNE(&ev)->output);
 				if (ocon) {
@@ -388,6 +402,13 @@ process_events(Display * dpy, int verbose, int emit_startup)
 				}
 			}
 			else {
+				if (mode || OCNE(&ev)->mode) {
+					fprintf(stderr, "Ignoring connected event with mode\n");
+					XRRFreeScreenResources(sr);
+					XRRFreeOutputInfo(info);
+					mode = NULL;
+					continue;
+				}
 				edidlen = get_edid(OCNE(&ev)->display, OCNE(&ev)->output, edid, EDID_SIZE);
 				i = get_sid(OCNE(&ev)->display, OCNE(&ev)->output);
 				CONNECTIONS = cache_connection(CONNECTIONS, OCNE(&ev)->output, edid, edidlen, i);
@@ -420,6 +441,7 @@ process_events(Display * dpy, int verbose, int emit_startup)
 			emit(dpy, info->name, CON_EVENTS[info->connection], edid, screenid);
 			XRRFreeScreenResources(sr);
 			XRRFreeOutputInfo(info);
+			mode = NULL;
 		}
 	}
 	return EXIT_SUCCESS;
