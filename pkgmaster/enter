#!/usr/bin/bash

set -e

# the default PATH used by rkt/nspawn does not include
# /usr/bin/{core,site,vendor}_perl
# however, we do not execute a login shell, so we never
# source /etc/profile.d/perlbin.sh to add those PATH
# entries
# since some PKGBUILDs depend on them, we manually add
# the PATH entries back in
export PATH=$PATH:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl

# give the builder user the same IDs as the host user
groupadd -f -g $GID builder
useradd -u $UID -g builder -m builder

# create the output directories
for DIR in /build/{dest,other,build} ; do
  mkdir -p "${DIR}"
  chown builder:builder "${DIR}"
done

# create databases if they don't exist,
# otherwise pacman -Sy will fail
repo-add /var/lib/pkgmaster/user.db.tar.xz

# makepkg makes extensive use of process substitution, which bash
# implements via /dev/fd access
# appc does not mandate this symlink so we must make it ourselves
# https://github.com/appc/spec/issues/641
# for some reason, this symlink already exists at build time, so
# we can't bake it into the image, and we have to make it at run
# time instead
ln -sf /proc/self/fd /dev/fd

# build it!
pacman -Syu --noconfirm
runuser -u builder -- makepkg -cs --noconfirm

# TODO: repo-remove older/other versions of packages that were added?
for PKG in "${PKGDEST}"/*.tar.xz ; do
  # the database file refers to the path to the package, so we can't
  # just repo-add it without moving it to the mounted volume
  mv "${PKG}" /var/lib/pkgmaster
  repo-add /var/lib/pkgmaster/user.db.tar.xz /var/lib/pkgmaster/"${PKG##*/}"
done

# the database dir contains the actual databases (user.{db,files}.tar.xz),
# symlinks to those databases (user.{db,files}), old versions of the databases
# that have been backed up (user.{db,files}.tar.xz.old), and actual packages
# (foo-v1.1-1-x86_64.pkg.tar.xz)
# we want ALL of these things to belong to the host user so we just chown it all
chown -h builder:builder /var/lib/pkgmaster/*
