diff --git a/config.def.h b/config.def.h
index 6e4b942..3912f57 100644
--- a/config.def.h
+++ b/config.def.h
@@ -36,8 +36,13 @@ static const suffixmode_t TITLE_SUFFIXMODE = SUFFIX_BASENAME;
  * (first/last value is used as min/max zoom level)
  */
 static const float zoom_levels[] = {
-	 12.5,  25.0,  50.0,  75.0,
-	100.0, 150.0, 200.0, 400.0, 800.0
+       // set a low minimum zoom for shrink-to-fit
+         5.0,
+       // [round((0.25**(1/10))**x * 100, 1) for x in range(10, 0, -1)]
+        25.0,  28.7,  33.0,  37.9,  43.5,  50.0,  57.4,  66.0,  75.8,  87.1,
+       100.0,
+       // [round((0.25**(1/10))**x * 100, 1) for x in range(-1, -11, -1)]
+       114.9, 132.0, 151.6, 174.1, 200.0, 229.7, 263.9, 303.1, 348.2, 400.0
 };
 
 /* default slideshow delay (in sec, overwritten via -S option): */
@@ -60,25 +65,25 @@ static const bool ANTI_ALIAS = true;
 /* if true, use a checkerboard background for alpha layer,
  * toggled with 'A' key binding
  */
-static const bool ALPHA_LAYER = false;
+static const bool ALPHA_LAYER = true;
 
 /* percentage of memory to use for imlib2's cache size.
  *   3 means use 3% of total memory which is about 245MiB on 8GiB machine.
  *   0 or less means disable cache.
  * 100 means use all available memory (but not above CACHE_SIZE_LIMIT).
  */
-static const int CACHE_SIZE_MEM_PERCENTAGE = 3;          /* use 3% of total memory for cache */
-static const int CACHE_SIZE_LIMIT = 256 * 1024 * 1024;   /* but not above 256MiB */
-static const int CACHE_SIZE_FALLBACK = 32 * 1024 * 1024; /* fallback to 32MiB if we can't determine total memory */
+static const int CACHE_SIZE_MEM_PERCENTAGE = 10;          /* use 10% of total memory for cache */
+static const int CACHE_SIZE_LIMIT = 1024 * 1024 * 1024;   /* but not above 1GiB */
+static const int CACHE_SIZE_FALLBACK = 512 * 1024 * 1024; /* fallback to 512MiB if we can't determine total memory */
 
 #endif
 #ifdef _THUMBS_CONFIG
 
 /* thumbnail sizes in pixels (width == height): */
-static const int thumb_sizes[] = { 32, 64, 96, 128, 160 };
+static const int thumb_sizes[] = { 64, 128, 192, 256, 320, 384 };
 
 /* thumbnail size at startup, index into thumb_sizes[]: */
-static const int THUMB_SIZE = 3;
+static const int THUMB_SIZE = 1;
 
 #endif
 #ifdef _MAPPINGS_CONFIG
@@ -96,7 +101,7 @@ static const keymap_t keys[] = {
 	{ 0,            XK_Return,        g_switch_mode,        None },
 	{ 0,            XK_f,             g_toggle_fullscreen,  None },
 	{ 0,            XK_b,             g_toggle_bar,         None },
-	{ ControlMask,  XK_x,             g_prefix_external,    None },
+	{ ControlMask,  XK_space,         g_prefix_external,    None },
 	{ 0,            XK_g,             g_first,              None },
 	{ 0,            XK_G,             g_n_or_last,          None },
 	{ 0,            XK_r,             g_reload_image,       None },
@@ -117,8 +122,6 @@ static const keymap_t keys[] = {
 	{ 0,            XK_M,             g_mark_range,         None },
 	{ ControlMask,  XK_m,             g_reverse_marks,      None },
 	{ ControlMask,  XK_u,             g_unmark_all,         None },
-	{ 0,            XK_N,             g_navigate_marked,    +1 },
-	{ 0,            XK_P,             g_navigate_marked,    -1 },
 	{ 0,            XK_braceleft,     g_change_gamma,       -1 },
 	{ 0,            XK_braceright,    g_change_gamma,       +1 },
 	{ ControlMask,  XK_g,             g_change_gamma,        0 },
@@ -133,12 +136,18 @@ static const keymap_t keys[] = {
 	{ 0,            XK_Right,         t_move_sel,           DIR_RIGHT },
 	{ 0,            XK_R,             t_reload_all,         None },
 
-	{ 0,            XK_n,             i_navigate,           +1 },
-	{ 0,            XK_n,             i_scroll_to_edge,     DIR_LEFT | DIR_UP },
 	{ 0,            XK_space,         i_navigate,           +1 },
-	{ 0,            XK_p,             i_navigate,           -1 },
-	{ 0,            XK_p,             i_scroll_to_edge,     DIR_LEFT | DIR_UP },
+	{ 0,            XK_period,        i_navigate,           +1 },
+	{ 0,            XK_period,        i_scroll_to_edge,     DIR_LEFT | DIR_UP },
 	{ 0,            XK_BackSpace,     i_navigate,           -1 },
+	{ 0,            XK_comma,         i_navigate,           -1 },
+	{ 0,            XK_comma,         i_scroll_to_edge,     DIR_LEFT | DIR_UP },
+	{ ControlMask,  XK_space,         g_navigate_marked,    +1 },
+	{ ControlMask,  XK_period,        g_navigate_marked,    +1 },
+	{ ControlMask,  XK_period,        i_scroll_to_edge,     DIR_LEFT | DIR_UP },
+	{ ControlMask,  XK_BackSpace,     g_navigate_marked,    -1 },
+	{ ControlMask,  XK_comma,         g_navigate_marked,    -1 },
+	{ ControlMask,  XK_comma,         i_scroll_to_edge,     DIR_LEFT | DIR_UP },
 	{ 0,            XK_bracketright,  i_navigate,           +10 },
 	{ 0,            XK_bracketleft,   i_navigate,           -10 },
 	{ ControlMask,  XK_6,             i_alternate,          None },
@@ -178,11 +187,12 @@ static const keymap_t keys[] = {
 static const button_t buttons[] = {
 	/* modifiers    button            function              argument */
 	{ 0,            1,                i_cursor_navigate,    None },
+	{ 0,            1,                i_scroll_to_edge,     DIR_LEFT | DIR_UP },
 	{ ControlMask,  1,                i_drag,               DRAG_RELATIVE },
 	{ 0,            2,                i_drag,               DRAG_ABSOLUTE },
 	{ 0,            3,                g_switch_mode,        None },
-	{ 0,            4,                g_zoom,               +1 },
-	{ 0,            5,                g_zoom,               -1 },
+	{ 0,            4,                i_scroll,             DIR_UP },
+	{ 0,            5,                i_scroll,             DIR_DOWN },
 };
 
 /* true means NAV_WIDTH is relative (33%), false means absolute (33 pixels) */
